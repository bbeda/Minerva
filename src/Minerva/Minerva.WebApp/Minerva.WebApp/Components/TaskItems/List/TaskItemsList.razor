@using MediatR
@using Minerva.Application.Features.TaskItems

@rendermode InteractiveServer

@inject IMediator mediator

@if (!string.IsNullOrEmpty(Title))
{
    <FluentLabel Typo="Typography.H3">@Title</FluentLabel>
}
<FluentStack Orientation="Orientation.Vertical">
    @if (TaskItems == null)
    {
        <FluentLabel Typo="Typography.H4">Loading...</FluentLabel>
    }
    else
    {
        @foreach (var item in TaskItems)
        {
           <TaskItemListEntry Item="item"/>
        }
    }

</FluentStack>

@code {
    [Parameter]
    public ICollection<TaskItemListItemModel>? TaskItems { get; set; }

    [Parameter]
    public Action<TaskItemListItemModel>? OnItemChanged { get; set; }

    [Parameter]
    public string? Title { get; set; }

    private string CompletedStyle(TaskItemListItemModel item)
    {
        return item.IsCompleted ? "text-decoration: line-through" : "";
    }

    private async Task UncompleteTaskItemAsync(TaskItemListItemModel item)
    {
        item.IsCompleted = false;
        OnItemChanged?.Invoke(item);
        await Task.CompletedTask;
    }

    private async Task CompleteTaskItemAsync(TaskItemListItemModel item)
    {
        var result = await mediator.Send(new CompleteTaskItemCommand() { TaskItemId = item.Id });
        if (result.IsSuccess)
        {
            item.IsCompleted = true;
            OnItemChanged?.Invoke(item);
        }
    }
}
