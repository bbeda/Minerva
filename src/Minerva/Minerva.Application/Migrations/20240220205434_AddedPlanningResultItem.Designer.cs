// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minerva.Application.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Minerva.Application.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240220205434_AddedPlanningResultItem")]
    partial class AddedPlanningResultItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Minerva.Application.Features.TaskItems.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CompletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("Planning", "Minerva.Application.Features.TaskItems.TaskItem.Planning#TaskItemPlanning", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateOnly?>("DayValue")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("MonthValue")
                                .HasColumnType("date");

                            b1.Property<int>("PlanningType")
                                .HasColumnType("integer");

                            b1.Property<DateOnly?>("WeekValue")
                                .HasColumnType("date");
                        });

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("Minerva.Application.Features.TaskItems.TaskItemPlanningResultItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly>("PlanningDate")
                        .HasColumnType("date");

                    b.Property<int>("PlanningType")
                        .HasColumnType("integer");

                    b.Property<int>("Result")
                        .HasColumnType("integer");

                    b.Property<Guid>("TaskItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.HasIndex("TenantId");

                    b.ToTable("TaskItemPlanningResultItems");
                });

            modelBuilder.Entity("Minerva.Application.Features.TaskItems.TaskItemPlanningResultItem", b =>
                {
                    b.HasOne("Minerva.Application.Features.TaskItems.TaskItem", "TaskItem")
                        .WithMany("Plans")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("Minerva.Application.Features.TaskItems.TaskItem", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
